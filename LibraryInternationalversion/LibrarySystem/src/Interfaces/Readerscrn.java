/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

/**
 *
 * @author long
 */
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import Processes.Reader;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
import Databases.Connect;
import java.awt.print.PrinterException;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.JOptionPane;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Date;
import javax.swing.JFileChooser;
import javax.swing.RowFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.TableRowSorter;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


public class Readerscrn extends javax.swing.JFrame {

    /**
     * Creates new form Reader
     */
    private final DefaultTableModel tableModel = new DefaultTableModel();
    private final Reader Readertbl = new Reader();
    public UReader ureadertbl = new UReader();
    public IReader newreaderscrn = new IReader();
    public Identitycard i = new Identitycard();
    public AFinecard l = new AFinecard();
    public ILoanSlip k = new ILoanSlip();
    public AIdentitycard aidentitytbl = new AIdentitycard();
    public Connect cn = new Connect();
    public Finecardscreen finecardscrn = new Finecardscreen();
    
    public Loanslipscreen loanslipscrn = new Loanslipscreen();
    public DetailReceiptscrn drscrn = new DetailReceiptscrn();
    public IDetailReceipt idrscrn = new IDetailReceipt();

    
    
    public Readerscrn() throws SQLException {
        initComponents();
        String []cols = {"FULLNAME", "GENDER", "AGE", "EMAIL", "PHONE NUMBER"};
        this.tableModel.setColumnIdentifiers(cols);
        this.ReaderTable.setModel(tableModel);
        this.ShowData();
        this.autoid();
        readercardbtn.setEnabled(false);
        borrowedcardbtn.setEnabled(false);
        finecardbtn.setEnabled(false);
        Deletebtn.setEnabled(false);
        drbtn.setEnabled(false);
        this.getreadernumber();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        readercardbtn = new javax.swing.JButton();
        borrowedcardbtn = new javax.swing.JButton();
        finecardbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ReaderTable = new javax.swing.JTable();
        createbtn = new javax.swing.JButton();
        Deletebtn = new javax.swing.JButton();
        textField1 = new java.awt.TextField();
        returnbtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        searchreadercardtxt = new javax.swing.JTextField();
        importexcelreaderbtn = new javax.swing.JButton();
        exportexcelbtn = new javax.swing.JButton();
        drbtn = new javax.swing.JButton();
        printbtn = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/study.png"))); // NOI18N
        jLabel1.setText("MEMBER'S REGISTRATION");

        readercardbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        readercardbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/reading.png"))); // NOI18N
        readercardbtn.setText("IDENTITY CARD");
        readercardbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                readercardbtnMouseClicked(evt);
            }
        });
        readercardbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readercardbtnActionPerformed(evt);
            }
        });

        borrowedcardbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        borrowedcardbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/documents.png"))); // NOI18N
        borrowedcardbtn.setText("LOAN SLIP");
        borrowedcardbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                borrowedcardbtnMouseClicked(evt);
            }
        });
        borrowedcardbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrowedcardbtnActionPerformed(evt);
            }
        });

        finecardbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        finecardbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/ticket1.png"))); // NOI18N
        finecardbtn.setText("FINECARD");
        finecardbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                finecardbtnMouseClicked(evt);
            }
        });

        ReaderTable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ReaderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        ReaderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ReaderTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ReaderTable);

        createbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        createbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/add-documents.png"))); // NOI18N
        createbtn.setText("REGISTER");
        createbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createbtnMouseClicked(evt);
            }
        });
        createbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createbtnActionPerformed(evt);
            }
        });

        Deletebtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Deletebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/delete.png"))); // NOI18N
        Deletebtn.setText("DELETE");
        Deletebtn.setToolTipText("");
        Deletebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeletebtnMouseClicked(evt);
            }
        });
        Deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletebtnActionPerformed(evt);
            }
        });

        textField1.setText("textField1");
        textField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField1ActionPerformed(evt);
            }
        });

        returnbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        returnbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/return.png"))); // NOI18N
        returnbtn.setText("RETURN ");
        returnbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                returnbtnMouseClicked(evt);
            }
        });
        returnbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnbtnActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setText("SEARCH FOR:");

        searchreadercardtxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchreadercardtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchreadercardtxtActionPerformed(evt);
            }
        });
        searchreadercardtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchreadercardtxtKeyReleased(evt);
            }
        });

        importexcelreaderbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        importexcelreaderbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/1.png"))); // NOI18N
        importexcelreaderbtn.setText("IMPORT FROM EXCEL");
        importexcelreaderbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                importexcelreaderbtnMouseClicked(evt);
            }
        });
        importexcelreaderbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importexcelreaderbtnActionPerformed(evt);
            }
        });

        exportexcelbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        exportexcelbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/1.png"))); // NOI18N
        exportexcelbtn.setText("SAVE AS EXCEL");
        exportexcelbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exportexcelbtnMouseClicked(evt);
            }
        });
        exportexcelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportexcelbtnActionPerformed(evt);
            }
        });

        drbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        drbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/documents.png"))); // NOI18N
        drbtn.setText("RECEIPT");
        drbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                drbtnMouseClicked(evt);
            }
        });

        printbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        printbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/documents.png"))); // NOI18N
        printbtn.setText("PRINT");
        printbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                printbtnMouseClicked(evt);
            }
        });

        jTextField1.setText("jTextField1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(readercardbtn)
                        .addGap(101, 101, 101)
                        .addComponent(drbtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(borrowedcardbtn)
                        .addGap(86, 86, 86)
                        .addComponent(finecardbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(createbtn)
                                .addGap(30, 30, 30)
                                .addComponent(printbtn)
                                .addGap(30, 30, 30)
                                .addComponent(importexcelreaderbtn)
                                .addGap(32, 32, 32)
                                .addComponent(exportexcelbtn)
                                .addGap(63, 63, 63)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Deletebtn))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(296, 296, 296)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchreadercardtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(returnbtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(170, 170, 170))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(returnbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 47, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(searchreadercardtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(createbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(printbtn)
                            .addComponent(importexcelreaderbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(exportexcelbtn)
                            .addComponent(Deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(readercardbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(drbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(borrowedcardbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(finecardbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        readercardbtn.getAccessibleContext().setAccessibleName("Identitycardbtn");
        borrowedcardbtn.getAccessibleContext().setAccessibleName("Loanslipbtn");
        finecardbtn.getAccessibleContext().setAccessibleName("Finecardbtn");
        createbtn.getAccessibleContext().setAccessibleName("create");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void autoid()
    {
       java.util.Random r = new java.util.Random();
       int start = 100000;
       int end = 999999;
       int res = r.nextInt(end - start) + start;
       
       this.aidentitytbl.IDcardtxt.setText(String.valueOf(res));
       this.l.idfinecardtxt.setText(String.valueOf(res));
       this.k.Idloansliptxt.setText(String.valueOf(res));
    }
    
    public void getreadernumber() throws SQLException
    {
        this.cn.connectSQL();
        String getreader = "select count(*) as countreader from Reader";

        PreparedStatement pst = this.cn.conn.prepareStatement(getreader);
        ResultSet rs = pst.executeQuery();
        if (rs.next())
        {
            String sumreader = rs.getString("countreader");
            this.jTextField1.setText(sumreader);
        }    
        
        this.ClearData();
        this.ShowData();
    }
    
    
    private void readercardbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readercardbtnActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_readercardbtnActionPerformed

    private void ReaderTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReaderTableMouseClicked
        // TODO add your handling code here:
        try
        {
            readercardbtn.setEnabled(true);
            borrowedcardbtn.setEnabled(true);
            finecardbtn.setEnabled(true);
            this.Deletebtn.setEnabled(true);
            drbtn.setEnabled(true);
            int row = ReaderTable.getSelectedRow();
            
            ResultSet r = this.Readertbl.DisplayReader(ReaderTable.getModel().getValueAt(row, 0).toString());
            if (r.next())
            {
                this.textField1.setText(r.getString("Fullname"));
                ureadertbl.Fullnametxt.setText(r.getString("Fullname"));
                ureadertbl.emailtxt.setText(r.getString("Email"));
                ureadertbl.agetxt.setText(String.valueOf(r.getInt("Age")));
                if (r.getBoolean("Gender"))
                {
                    this.ureadertbl.Malechck.setSelected(true);
                    this.ureadertbl.Femalechck.setSelected(false);
                }
                else
                {
                    this.ureadertbl.Malechck.setSelected(false);
                    this.ureadertbl.Femalechck.setSelected(true);
                }
                ureadertbl.phonenotxt.setText(r.getString("Phonenum"));
                if (r.getBoolean("Gender"))
                {
                    this.aidentitytbl.Malechck.setSelected(true);
                    this.aidentitytbl.Femalechck.setSelected(false);
                }
                else
                {
                    this.aidentitytbl.Malechck.setSelected(false);
                    this.aidentitytbl.Femalechck.setSelected(true);
                }
                this.aidentitytbl.agetxt.setText(String.valueOf(r.getInt("Age")));
                this.aidentitytbl.emailtxt.setText(r.getString("Email"));
                this.idrscrn.jComboBox1.setSelectedItem(r.getString("Fullname"));
                
            }
        }
        catch (SQLException ex) {
                
        }

    }
    
    public void ShowData() throws SQLException
    {
        ResultSet res = this.Readertbl.Display();
        try 
        {
            while(res.next())
            {
                String rows[] = new String[5];
    
                rows[0] = res.getString(1);
                rows[1] = res.getBoolean(3)?"MALE":"FEMALE";
                rows[2] = String.valueOf(res.getInt(4));
                rows[3] = res.getString(2);
                rows[4] = res.getString(5);
                tableModel.addRow(rows);
            }
        }
        catch (SQLException e)
        {
            
        }
        
    }
    
    public void ClearData() throws SQLException
    {
        for (int i = tableModel.getRowCount()-1; i >= 0; i--)
        {
            tableModel.removeRow(i);
        }
            
    }


    public void deletebtnMouseClicked(java.awt.event.MouseEvent evt) {
            // TODO add your handling code here:
      

    }//GEN-LAST:event_ReaderTableMouseClicked

    private void DeletebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeletebtnMouseClicked
        // TODO add your handling code here:
        try
        {
            if (this.textField1.getText().length() == 0)
            {
                JOptionPane.showMessageDialog(null, "YOU HAVEN'T CHOOSE YET", "WARNING", 1);
                return;
            }
            else
            {
                int ynoption = JOptionPane.showConfirmDialog(this, "ARE YOU SURE TO DELETE THIS? IT WILL AFFECT YOUR SQL DATABASE", "WARNING", JOptionPane.YES_NO_OPTION);
                if (ynoption == JOptionPane.YES_OPTION)
                {
                    Readertbl.DeletePub(this.textField1.getText());
                    this.ClearData();
                    this.ShowData();    
                }
                else
                {
                    return;
                }
               
            }
        }
        catch (SQLException ex)
        {
            
        }
    }//GEN-LAST:event_DeletebtnMouseClicked

    private void createbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createbtnMouseClicked
        // TODO add your handling code here:    
        newreaderscrn.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_createbtnMouseClicked

    private void readercardbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_readercardbtnMouseClicked
        // TODO add your handling code here:
        aidentitytbl.setVisible(true);
        this.i.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_readercardbtnMouseClicked

    private void finecardbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_finecardbtnMouseClicked
        // TODO add your handling code here:        
            l.setVisible(true);
            this.finecardscrn.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_finecardbtnMouseClicked

    private void borrowedcardbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_borrowedcardbtnMouseClicked
        // TODO add your handling code here:
            k.setVisible(true);
            this.loanslipscrn.setVisible(true);
            
            this.dispose();
    }//GEN-LAST:event_borrowedcardbtnMouseClicked

    private void returnbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnbtnMouseClicked
        // TODO add your handling code here:
        Library l = new Library();
        l.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_returnbtnMouseClicked

    private void createbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createbtnActionPerformed

    private void DeletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeletebtnActionPerformed
    public void ShowData(String id, String email, String phonenum)
    {
        try
        {
            ResultSet result = null;
            result = this.Readertbl.SearchReader(id, email, phonenum);
            this.ClearData();
            while(result.next())
            {
                String rows[] = new String[5];
    
                rows[0] = result.getString(1);
                rows[1] = result.getBoolean(3)?"MALE":"FEMALE";
                rows[2] = String.valueOf(result.getInt(4));
                rows[3] = result.getString(2);
                rows[4] = result.getString(5);
                tableModel.addRow(rows);
            }
            
        
        }
        catch (SQLException ex)
        {
            Logger.getLogger(Readerscrn.class.getName()).log(Level.SEVERE, null, ex);
            
        }
    }
    
    private void searchreadercardtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchreadercardtxtKeyReleased
        try {

            // TODO add your handling code here:
                  this.ClearData();
                  this.ShowData(this.searchreadercardtxt.getText(), this.searchreadercardtxt.getText(), this.searchreadercardtxt.getText());
                  return;
            
            
          
                   
        } catch (SQLException ex) {
            Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
        }
      
      
    }//GEN-LAST:event_searchreadercardtxtKeyReleased

    private void returnbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_returnbtnActionPerformed

    private void searchreadercardtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchreadercardtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchreadercardtxtActionPerformed

    private void importexcelreaderbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_importexcelreaderbtnMouseClicked
        // TODO add your handling code here:
        try
        {
            File excelfile;
            FileInputStream excelFIS = null;
            BufferedInputStream excelBIS = null;
            XSSFWorkbook excelJTableImport = null;

            String path = "C:\\";
            JFileChooser excelfilechooser = new JFileChooser();
            int excelchooser = excelfilechooser.showOpenDialog(null);

            if (excelchooser == JFileChooser.APPROVE_OPTION)
            {
                excelfile = excelfilechooser.getSelectedFile();
                excelFIS = new FileInputStream(excelfile);
                excelBIS = new BufferedInputStream(excelFIS);

                excelJTableImport = new XSSFWorkbook(excelBIS);
                XSSFSheet excelSheet = excelJTableImport.getSheetAt(0);

                for(int i = 0; i <= excelSheet.getLastRowNum(); i++)
                {
                    XSSFRow excelrow = excelSheet.getRow(i);
                    XSSFCell excelfullname = excelrow.getCell(0);
                    XSSFCell excelemail = excelrow.getCell(3);
                    XSSFCell excelgender = excelrow.getCell(1);
                    XSSFCell excelage = excelrow.getCell(2);
                    XSSFCell excelphonenum = excelrow.getCell(4);
                    this.tableModel.addRow(new Object[] {excelfullname, excelgender, excelage, excelemail, excelphonenum});
                    this.Readertbl.InsertReadertoSQL(excelfullname.toString(), excelemail.toString(), (excelgender.toString().equals("Nam")?true:false), Integer.parseInt(excelage.toString()), excelphonenum.toString());
                    JOptionPane.showMessageDialog(null, "IMPORT SUCCESSFULLY", "WARNING", 1);
                }
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_importexcelreaderbtnMouseClicked

    private void importexcelreaderbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importexcelreaderbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_importexcelreaderbtnActionPerformed

    private void exportexcelbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportexcelbtnMouseClicked
        // TODO add your handling code here:
        FileOutputStream excelFOS = null;
        BufferedOutputStream excelBOS = null;
        XSSFWorkbook excelexportfile = null;
        JFileChooser excelfilechooser = new JFileChooser("C:\\");
            excelfilechooser.setDialogTitle("SAVE AS EXCEL SUCCESSFULLY");
            FileNameExtensionFilter f = new FileNameExtensionFilter("xlsx", "xlsm");
            excelfilechooser.setFileFilter(f);
            int excelchooser = excelfilechooser.showSaveDialog(null);

            if (excelchooser == JFileChooser.APPROVE_OPTION)
            {

                try {
                    excelexportfile = new XSSFWorkbook();
                    XSSFSheet excelsheet = excelexportfile.createSheet("JTable Sheet");
                    for (int i = 0; i < this.tableModel.getRowCount(); i++)
                    {
                        XSSFRow excelrow = excelsheet.createRow(i);
                        for(int j = 0; j < this.tableModel.getColumnCount(); j++)
                        {
                            XSSFCell excelcolumn = excelrow.createCell(j);
                            excelcolumn.setCellValue(this.tableModel.getValueAt(i, j).toString());
                        }
                    }
                    excelFOS = new FileOutputStream(excelfilechooser.getSelectedFile() + ".xlsx");
                    excelBOS = new BufferedOutputStream(excelFOS);
                    excelexportfile.write(excelBOS);
                    JOptionPane.showMessageDialog(null, "SAVE SUCCESSFULLY", "WARNING", 1);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    try {
                        if (excelBOS != null)
                        {
                            excelBOS.close();
                        }
                        if (excelFOS != null)
                        {
                            excelFOS.close();
                        }
                        if (excelexportfile != null)
                        {
                            excelexportfile.close();
                        }

                    } catch (IOException ex) {
                        Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
    }//GEN-LAST:event_exportexcelbtnMouseClicked

    private void exportexcelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportexcelbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exportexcelbtnActionPerformed

    private void drbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drbtnMouseClicked
        // TODO add your handling code here:
        idrscrn.setVisible(true);
        drscrn.setVisible(true);
        dispose();
    }//GEN-LAST:event_drbtnMouseClicked

    private void printbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printbtnMouseClicked
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:

            Boolean printreadertbl = this.ReaderTable.print();
            if (printreadertbl)
            {
                JOptionPane.showMessageDialog(null, "PRINTED SUCCESSFULLY", "WARNING", 1);
            }
            else
            {
                
            }

        } catch (PrinterException ex) {
            Logger.getLogger(DetailReceiptscrn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printbtnMouseClicked

    private void textField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField1ActionPerformed

    private void borrowedcardbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrowedcardbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_borrowedcardbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Readerscrn().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Readerscrn.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Deletebtn;
    private javax.swing.JTable ReaderTable;
    private javax.swing.JButton borrowedcardbtn;
    public javax.swing.JButton createbtn;
    private javax.swing.JButton drbtn;
    private javax.swing.JButton exportexcelbtn;
    private javax.swing.JButton finecardbtn;
    private javax.swing.JButton importexcelreaderbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextField jTextField1;
    private javax.swing.JButton printbtn;
    private javax.swing.JButton readercardbtn;
    private javax.swing.JButton returnbtn;
    public javax.swing.JTextField searchreadercardtxt;
    private java.awt.TextField textField1;
    // End of variables declaration//GEN-END:variables
}
