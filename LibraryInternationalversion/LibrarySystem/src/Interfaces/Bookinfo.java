/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import Processes.Publisher;
import Processes.Book;
import Processes.BookInfo;
import java.awt.print.PrinterException;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.JOptionPane;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JFileChooser;
import javax.swing.RowFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.TableRowSorter;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import javax.swing.JButton;
import javax.swing.JFrame;


/**
 *0
 *
 * @author long
 */
public class Bookinfo extends javax.swing.JFrame {

    /**
     * Creates new form Bookinfo
     */
    private final DefaultTableModel tableModel1 = new DefaultTableModel();
    private final DefaultTableModel tableModel2 = new DefaultTableModel();
    private final DefaultTableModel tableModel3 = new DefaultTableModel();
    private final Book booktbl = new Book();
    private final Publisher pubtbl = new Publisher();
    public BookInfo bookinfotbl = new BookInfo();
    public UBookInfo ubookinfotbl = new UBookInfo();
    public Ubook ubscrn = new Ubook();
    public UPublisher upubscrn = new UPublisher();
    
   
    public Bookinfo() throws SQLException {
        initComponents();
        String []colsb = {"ID", "PUBLISHED YEAR", "TITLE", "TYPE", "AMMOUNT", "DATE"};
        tableModel1.setColumnIdentifiers(colsb);
        Bookinfotable.setModel(tableModel1);
        ShowDatab();
        
        String []colsp = {"ID", "ADDRESS", "NO"};
        tableModel2.setColumnIdentifiers(colsp);
        Pubinfotable.setModel(tableModel2);
        ShowDatapub();
        
        String []colsbi = {"BOOK'S ID", "PUBLISHING ID", "NAME OF AUTHOR", "GENDER"};
        tableModel3.setColumnIdentifiers(colsbi);
        BookInfotbl.setModel(tableModel3);
        ShowDatabi();
        
        this.GetSumAmmountofBook();
        this.updatebbtn.setEnabled(false);
        this.updatebtn.setEnabled(false);
        this.updatepbtn.setEnabled(false);
        this.deletebbtn.setEnabled(false);
        this.deletebtn.setEnabled(false);
        this.deletepbtn.setEnabled(false);
        this.deletebbtn.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        createbtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        publisherbtn = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        Pubinfotable = new javax.swing.JTable();
        deletepbtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Bookinfotable = new javax.swing.JTable();
        returnbtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        BookInfotbl = new javax.swing.JTable();
        createinfotbl = new javax.swing.JButton();
        deletebbtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        updatebtn = new javax.swing.JButton();
        updatebbtn = new javax.swing.JButton();
        updatepbtn = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        searchtxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        searchbooktxt = new javax.swing.JTextField();
        searchpubtxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        importexcelbtn = new javax.swing.JButton();
        importexcelbbtn = new javax.swing.JButton();
        importexcelbbtn1 = new javax.swing.JButton();
        importexcelbbtn2 = new javax.swing.JButton();
        importexcelbbtn3 = new javax.swing.JButton();
        printbtn = new javax.swing.JButton();
        printbtn1 = new javax.swing.JButton();
        printbtn2 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Thông tin sách"); // NOI18N
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/book (1).png"))); // NOI18N
        jLabel1.setText("LIST OF IMPORTED BOOKS");

        createbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        createbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/add-documents.png"))); // NOI18N
        createbtn.setText("IMPORT BOOK");
        createbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createbtnMouseClicked(evt);
            }
        });
        createbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createbtnActionPerformed(evt);
            }
        });

        deletebtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        deletebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/delete.png"))); // NOI18N
        deletebtn.setText("DELETE");
        deletebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletebtnMouseClicked(evt);
            }
        });
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });

        publisherbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        publisherbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/add-documents.png"))); // NOI18N
        publisherbtn.setText("IMPORT");
        publisherbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                publisherbtnMouseClicked(evt);
            }
        });
        publisherbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publisherbtnActionPerformed(evt);
            }
        });

        jTextField1.setText("jTextField1");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setText("jTextField2");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        Pubinfotable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Pubinfotable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        Pubinfotable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PubinfotableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(Pubinfotable);

        deletepbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        deletepbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/delete.png"))); // NOI18N
        deletepbtn.setText("XÓA ");
        deletepbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletepbtnMouseClicked(evt);
            }
        });
        deletepbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletepbtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/book (1).png"))); // NOI18N
        jLabel2.setText("LIST OF BOOKS");

        Bookinfotable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Bookinfotable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        Bookinfotable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BookinfotableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Bookinfotable);

        returnbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        returnbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/return.png"))); // NOI18N
        returnbtn.setText("RETURN");
        returnbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                returnbtnMouseClicked(evt);
            }
        });

        BookInfotbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        BookInfotbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        BookInfotbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BookInfotblMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(BookInfotbl);

        createinfotbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        createinfotbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/add-documents.png"))); // NOI18N
        createinfotbl.setText("IMPORT");
        createinfotbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createinfotblMouseClicked(evt);
            }
        });
        createinfotbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createinfotblActionPerformed(evt);
            }
        });

        deletebbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        deletebbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/delete.png"))); // NOI18N
        deletebbtn.setText("DELETE");
        deletebbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletebbtnMouseClicked(evt);
            }
        });
        deletebbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebbtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/pass-card.png"))); // NOI18N
        jLabel3.setText("LIST OF PUBLISHERS");

        updatebtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        updatebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/refresh.png"))); // NOI18N
        updatebtn.setText("UPDATE");
        updatebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatebtnMouseClicked(evt);
            }
        });
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        updatebbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        updatebbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/refresh.png"))); // NOI18N
        updatebbtn.setText("UPDATE");
        updatebbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatebbtnMouseClicked(evt);
            }
        });
        updatebbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebbtnActionPerformed(evt);
            }
        });

        updatepbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        updatepbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/refresh.png"))); // NOI18N
        updatepbtn.setText("UPDATE");
        updatepbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatepbtnMouseClicked(evt);
            }
        });
        updatepbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatepbtnActionPerformed(evt);
            }
        });

        jTextField3.setToolTipText("");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setText("SEARCH FOR:");

        searchtxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchtxtActionPerformed(evt);
            }
        });
        searchtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchtxtKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setText("SEARCH FOR:");

        searchbooktxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchbooktxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchbooktxtKeyReleased(evt);
            }
        });

        searchpubtxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchpubtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchpubtxtActionPerformed(evt);
            }
        });
        searchpubtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchpubtxtKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setText("SEARCH FOR:");

        importexcelbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        importexcelbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/1.png"))); // NOI18N
        importexcelbtn.setText("IMPORT BOOK FROM EXCEL");
        importexcelbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                importexcelbtnMouseClicked(evt);
            }
        });
        importexcelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importexcelbtnActionPerformed(evt);
            }
        });

        importexcelbbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        importexcelbbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/1.png"))); // NOI18N
        importexcelbbtn.setText("IMPORT FROM EXCEL");
        importexcelbbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                importexcelbbtnMouseClicked(evt);
            }
        });
        importexcelbbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importexcelbbtnActionPerformed(evt);
            }
        });

        importexcelbbtn1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        importexcelbbtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/1.png"))); // NOI18N
        importexcelbbtn1.setText("SAVE AS EXCEL");
        importexcelbbtn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                importexcelbbtn1MouseClicked(evt);
            }
        });
        importexcelbbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importexcelbbtn1ActionPerformed(evt);
            }
        });

        importexcelbbtn2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        importexcelbbtn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/1.png"))); // NOI18N
        importexcelbbtn2.setText("SAVE AS EXCEL");
        importexcelbbtn2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                importexcelbbtn2MouseClicked(evt);
            }
        });
        importexcelbbtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importexcelbbtn2ActionPerformed(evt);
            }
        });

        importexcelbbtn3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        importexcelbbtn3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/1.png"))); // NOI18N
        importexcelbbtn3.setText("SAVE AS EXCEL");
        importexcelbbtn3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                importexcelbbtn3MouseClicked(evt);
            }
        });
        importexcelbbtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importexcelbbtn3ActionPerformed(evt);
            }
        });

        printbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        printbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/documents.png"))); // NOI18N
        printbtn.setText("PRINT");
        printbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                printbtnMouseClicked(evt);
            }
        });
        printbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printbtnActionPerformed(evt);
            }
        });

        printbtn1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        printbtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/documents.png"))); // NOI18N
        printbtn1.setText("PRINT");
        printbtn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                printbtn1MouseClicked(evt);
            }
        });
        printbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printbtn1ActionPerformed(evt);
            }
        });

        printbtn2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        printbtn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/documents.png"))); // NOI18N
        printbtn2.setText("PRINT");
        printbtn2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                printbtn2MouseClicked(evt);
            }
        });
        printbtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printbtn2ActionPerformed(evt);
            }
        });

        jTextField4.setText("jTextField4");
        jTextField4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(190, 190, 190)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 743, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(returnbtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(63, 63, 63)
                                .addComponent(printbtn2)
                                .addGap(125, 125, 125)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(97, 97, 97))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(createbtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(importexcelbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(importexcelbbtn3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(updatebbtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deletebtn)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(createinfotbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(printbtn)
                                        .addGap(27, 27, 27)
                                        .addComponent(importexcelbbtn2)
                                        .addGap(18, 18, 18)
                                        .addComponent(updatebtn)
                                        .addGap(18, 18, 18)
                                        .addComponent(deletebbtn)))
                                .addGap(9, 9, 9))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(publisherbtn)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(192, 192, 192))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(printbtn1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(importexcelbbtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(importexcelbbtn1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(updatepbtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(deletepbtn))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(215, 215, 215)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchbooktxt, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(318, 318, 318))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchpubtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(338, 338, 338))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(297, 297, 297))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(printbtn2)
                        .addComponent(returnbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(8, 8, 8)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createbtn)
                    .addComponent(importexcelbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(importexcelbbtn3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updatebbtn)
                    .addComponent(deletebtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchbooktxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createinfotbl)
                    .addComponent(printbtn)
                    .addComponent(importexcelbbtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updatebtn)
                    .addComponent(deletebbtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchpubtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(publisherbtn)
                    .addComponent(printbtn1)
                    .addComponent(importexcelbbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(importexcelbbtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updatepbtn)
                    .addComponent(deletepbtn))
                .addGap(91, 91, 91))
        );

        createbtn.getAccessibleContext().setAccessibleName("createbookbtn");
        deletebtn.getAccessibleContext().setAccessibleName("deletebookbtn");
        publisherbtn.getAccessibleContext().setAccessibleName("Publisherbtn");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void ShowDatab() throws SQLException
    {
        ResultSet resb = booktbl.Displaybook();
        try 
        {
            while(resb.next())
            {
                String rows[] = new String[6];
    
                rows[0] = resb.getString(1);
                rows[1] = String.valueOf(resb.getInt(2));
                rows[2] = resb.getString(3);
                rows[3] = resb.getString(4);
                rows[4] = String.valueOf(resb.getInt(5));
                rows[5] = String.valueOf(resb.getDate(6));
                this.tableModel1.addRow(rows);
            }
        }
        catch (SQLException e)
        {
            
        }
    }
    
    public void ShowDatab(String id, String title, String type) throws SQLException
    {
        ResultSet resb = booktbl.Searchbook(id, title, type);
        try 
        {
            while(resb.next())
            {
                String rows[] = new String[6];
    
                rows[0] = resb.getString(1);
                rows[1] = String.valueOf(resb.getInt(2));
                rows[2] = resb.getString(3);
                rows[3] = resb.getString(4);
                rows[4] = String.valueOf(resb.getInt(5));
                rows[5] = String.valueOf(resb.getDate(6));
                this.tableModel1.addRow(rows);
            }
        }
        catch (SQLException e)
        {
            
        }
    }
    
    public void ShowDatapub() throws SQLException
    {
   
        ResultSet respub = pubtbl.DisplayPub();
        try 
        {
            while(respub.next())
            {
                String rows[] = new String[3];
    
                rows[0] = respub.getString(1);
                rows[1] = respub.getString(2);
                rows[2] = respub.getString(3);
                this.tableModel2.addRow(rows);
            }
        }
        catch (SQLException e)
        {
            
        }
        
    }
    
    public void ShowDatapub(String id, String addr, String phoneno)
    {
        try
        {
            ResultSet result = null;
            result = this.pubtbl.SearchPub(id, addr, phoneno);
            this.ClearDatapub();
            while(result.next())
            {
                String rows[] = new String[3];
    
                rows[0] = result.getString(1);
                rows[1] = result.getString(2);
                rows[2] = result.getString(3);
                this.tableModel2.addRow(rows);

            }
            
        
        }
        catch (SQLException ex)
        {
            Logger.getLogger(Readerscrn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void ShowDatabi() throws SQLException
    {
        ResultSet resbi = bookinfotbl.DisplayBookInfo();
        try 
        {
            while(resbi.next())
            {
                String rows[] = new String[4];
    
                rows[0] = resbi.getString(1);
                rows[1] = resbi.getString(2);
                rows[2] = resbi.getString(3);
                rows[3] = resbi.getBoolean(4)?"MALE":"FEMALE";
                this.tableModel3.addRow(rows);
            }
        }
        catch (SQLException e)
        {
            
        }
    }
    
     public void ShowDatabi(String s) throws SQLException
    {
        ResultSet resbi = bookinfotbl.Searchbookinfo(s);
        try 
        {
            while(resbi.next())
            {
                String rows[] = new String[4];
    
                rows[0] = resbi.getString(1);
                rows[1] = resbi.getString(2);
                rows[2] = resbi.getString(3);
                rows[3] = resbi.getBoolean(4)?"MALE":"FEMALE";
                this.tableModel3.addRow(rows);
            }
        }
        catch (SQLException e)
        {
            
        }
    }
    
    public void ClearDatabook() throws SQLException
    {
        for (int i = tableModel1.getRowCount()-1; i >= 0; i--)
        {
            tableModel1.removeRow(i);
        }
            
    }
    
    public void ClearDatapub() throws SQLException
    {
        for (int i = tableModel2.getRowCount()-1; i >= 0; i--)
        {
            tableModel2.removeRow(i);
        }
            
    }
    
     public void ClearDataBookInfo() throws SQLException
    {
        for (int i = tableModel3.getRowCount()-1; i >= 0; i--)
        {
            tableModel3.removeRow(i);
        }
            
    }

    
    private void createbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createbtnActionPerformed

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deletebtnActionPerformed

    private void publisherbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publisherbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_publisherbtnActionPerformed

    private void createbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createbtnMouseClicked
        // TODO add your handling code here:
        IBook b = new IBook();
        b.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_createbtnMouseClicked

    private void deletebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletebtnMouseClicked
        // TODO add your handling code here:
            try
        {
            if(jTextField1.getText().length() == 0)
            {
                JOptionPane.showMessageDialog(null, "YOU HAVEN'T CHOOSE YET", "WARNING", 1);
                return;
            }
            else
            {
                int ynoption = JOptionPane.showConfirmDialog(this, "ARE YOU SURE YOU WANT TO CONTINUE IT WILL AFFECT YOUR SQL DATABASE", "WARNING", JOptionPane.YES_NO_OPTION);
                if (ynoption == JOptionPane.YES_OPTION)
                {
                    booktbl.Deletebook(jTextField1.getText());
                    this.ClearDataBookInfo();
                    this.ShowDatabi();
                    ClearDatabook();
                    ShowDatab();  
                }
                else
                {
                    return;
                }
                  
            }
        }
        catch (SQLException ex)
        {
            
        }
    }//GEN-LAST:event_deletebtnMouseClicked

    private void publisherbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_publisherbtnMouseClicked
        // TODO add your handling code here:
        IPublisher pub = new IPublisher();
        pub.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_publisherbtnMouseClicked

    private void deletepbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletepbtnMouseClicked
        // TODO add your handling code here:
        try
        {
            if(jTextField2.getText().length() == 0)
            {
                JOptionPane.showMessageDialog(null, "YOU HAVENT CHOOSE YET", "WARNING", 1);
                return;
            }
            else
            {
              
                int ynoption = JOptionPane.showConfirmDialog(this, "ARE YOU SURE YOU WANT TO CONTINUE IT WILL AFFECT YOUR SQL DATABASE", "WARNING", JOptionPane.YES_NO_OPTION);
                if (ynoption == JOptionPane.YES_OPTION)
                {
                    pubtbl.DeletePub(jTextField2.getText());
                    ClearDatapub();
                    ShowDatapub(); 
                    this.ClearDataBookInfo();
                    this.ShowDatabi();
                }
                else
                {
                    return;
                }
            }
        }
        catch (SQLException ex)
        {
            
        }
    }//GEN-LAST:event_deletepbtnMouseClicked

    private void deletepbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletepbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deletepbtnActionPerformed

    private void PubinfotableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PubinfotableMouseClicked
        // TODO add your handling code here:
        try
        {
            int row = Pubinfotable.getSelectedRow();
            this.updatepbtn.setEnabled(true);
            this.deletepbtn.setEnabled(true);
            ResultSet r = pubtbl.DisplayPub(this.Pubinfotable.getModel().getValueAt(row, 0).toString());
            if (r.next())
            {
                jTextField2.setText(r.getString("Idpublisher"));
                this.upubscrn.idpubtxt.setText(r.getString("Idpublisher"));
                this.upubscrn.addresstxt.setText(r.getString("address"));
                this.upubscrn.phoneno.setText(r.getString("phonenum"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_PubinfotableMouseClicked

    private void BookinfotableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BookinfotableMouseClicked
        // TODO add your handling code here:
        try
        {
           
            int row = Bookinfotable.getSelectedRow();
            this.updatebbtn.setEnabled(true);
            this.deletebtn.setEnabled(true);
            ResultSet r = booktbl.Displaybook(this.Bookinfotable.getModel().getValueAt(row, 0).toString());
            if (r.next())
            {
                jTextField1.setText(r.getString("Idbook"));
                this.ubscrn.idbooktxt.setText(r.getString("Idbook"));
                this.ubscrn.Pubyeartxt.setText(String.valueOf(r.getInt("pubyear")));
                this.ubscrn.Titletxt.setText(r.getString("title"));
                this.ubscrn.typetxt.setText(r.getString("type"));
                this.ubscrn.ammounttxt.setText(String.valueOf(r.getInt("ammount")));
                this.ubscrn.datepub.setDate(r.getDate("datepub"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
    }//GEN-LAST:event_BookinfotableMouseClicked

    private void returnbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnbtnMouseClicked
        // TODO add your handling code here:
        Library l = new Library();
        l.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_returnbtnMouseClicked

    private void BookInfotblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BookInfotblMouseClicked
        // TODO add your handling code here:
        try
        {
            int row = BookInfotbl.getSelectedRow();
            this.updatebtn.setEnabled(true);
            this.deletebbtn.setEnabled(true);
            ResultSet r = bookinfotbl.DisplayBookInfo(this.BookInfotbl.getModel().getValueAt(row, 2).toString());
            if (r.next())
            {
                jTextField3.setText(r.getString("PubFullName"));
                ubookinfotbl.jComboBox1.setSelectedItem(r.getString("Idbook"));
                ubookinfotbl.jComboBox2.setSelectedItem(r.getString("Idpublisher"));
                ubookinfotbl.fullnametxt.setText(r.getString("PubFullName"));
                if (r.getBoolean("Gender"))
                {
                    this.ubookinfotbl.Malechck.setSelected(true);
                    this.ubookinfotbl.Femalechck.setSelected(false);
                }
                else
                {
                    this.ubookinfotbl.Malechck.setSelected(false);
                    this.ubookinfotbl.Femalechck.setSelected(true);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_BookInfotblMouseClicked

    private void createinfotblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createinfotblMouseClicked
        // TODO add your handling code here:
        IBookInfo bookinfoscrn = new IBookInfo();
        bookinfoscrn.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_createinfotblMouseClicked

    private void createinfotblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createinfotblActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createinfotblActionPerformed

    private void deletebbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletebbtnMouseClicked
        // TODO add your handling code here:
        try
        {
            if(jTextField3.getText().length() == 0)
            {
                JOptionPane.showMessageDialog(null, "YOU HAVEN'T CHOOSE YET!", "WARNING", 1);
                return;
            }
            else
            {
               
                int ynoption = JOptionPane.showConfirmDialog(this, "ARE YOU SURE YOU WANT TO CONTINUE IT WILL AFFECT YOUR SQL DATABASE", "WARNING", JOptionPane.YES_NO_OPTION);
                if (ynoption == JOptionPane.YES_OPTION)
                {
                    this.bookinfotbl.Deletebook(jTextField3.getText());     
                    ClearDataBookInfo();  
                    ShowDatabi();  
                    JOptionPane.showMessageDialog(null, "DELETE SUCCESSFULLY", "WARNING", 1);
                }
                else
                {
                    return;
                }
            }
        }
        catch (SQLException ex)
        {
            
        }
        
    }//GEN-LAST:event_deletebbtnMouseClicked

    private void deletebbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deletebbtnActionPerformed

    private void updatebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebtnMouseClicked
        // TODO add your handling code here:
        this.ubookinfotbl.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_updatebtnMouseClicked

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updatebtnActionPerformed

    private void updatebbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebbtnMouseClicked
        // TODO add your handling code here:
        ubscrn.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_updatebbtnMouseClicked

    private void updatebbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebbtnActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_updatebbtnActionPerformed

    private void updatepbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatepbtnMouseClicked
        // TODO add your handling code here:     
        upubscrn.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_updatepbtnMouseClicked

    private void updatepbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatepbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updatepbtnActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void searchtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchtxtKeyReleased
        
        try {
            // TODO add your handling code here:
   
            this.ClearDatabook();
            this.ShowDatab(searchtxt.getText(), searchtxt.getText(), searchtxt.getText());
        } catch (SQLException ex) {
            Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_searchtxtKeyReleased

    private void searchbooktxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchbooktxtKeyReleased
        try {        
            // TODO add your handling code here:
            this.ClearDataBookInfo();
            this.ShowDatabi(searchbooktxt.getText());
        } catch (SQLException ex) {
            Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_searchbooktxtKeyReleased

    private void searchpubtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchpubtxtKeyReleased
        try {        
            // TODO add your handling code here:            
            this.ClearDatapub();
            this.ShowDatapub(this.searchpubtxt.getText(), this.searchpubtxt.getText(), this.searchpubtxt.getText());
        } catch (SQLException ex) {
            Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }//GEN-LAST:event_searchpubtxtKeyReleased

    private void searchtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchtxtActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void searchpubtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchpubtxtActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_searchpubtxtActionPerformed

    private void importexcelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importexcelbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_importexcelbtnActionPerformed
    
     public java.sql.Date convertJavaDateToSqlDate(java.util.Date date) {
        return new java.sql.Date(date.getTime());  
    }
    
    private void importexcelbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_importexcelbtnMouseClicked
        // TODO add your handling code here:
             try
             {
               File excelfile;
               FileInputStream excelFIS = null;
               BufferedInputStream excelBIS = null;
               XSSFWorkbook excelJTableImport = null;
               
               String path = "C:\\";
               JFileChooser excelfilechooser = new JFileChooser();
               int excelchooser = excelfilechooser.showOpenDialog(null);

               if (excelchooser == JFileChooser.APPROVE_OPTION)
               {
                       excelfile = excelfilechooser.getSelectedFile();
                       excelFIS = new FileInputStream(excelfile);
                       excelBIS = new BufferedInputStream(excelFIS);
                
                        excelJTableImport = new XSSFWorkbook(excelBIS);
                        XSSFSheet excelSheet = excelJTableImport.getSheetAt(0);

                        for(int i = 0; i <= excelSheet.getLastRowNum(); i++)
                       {
                               XSSFRow excelrow = excelSheet.getRow(i);
                               XSSFCell excelidbook = excelrow.getCell(0);
                               XSSFCell excelpubyear = excelrow.getCell(1);
                               XSSFCell exceltype = excelrow.getCell(2);
                               XSSFCell exceltitle = excelrow.getCell(3);
                               XSSFCell excelammount = excelrow.getCell(4);
                               XSSFCell exceldate = excelrow.getCell(5);
                               SimpleDateFormat a = new SimpleDateFormat("dd/MM/yyyy");
                               
                               this.tableModel1.addRow(new Object[] {excelidbook, excelpubyear, exceltype, exceltitle, excelammount, exceldate});
                               this.booktbl.InsertbooktoSQL(excelidbook.toString(), Integer.parseInt(excelpubyear.toString()), exceltitle.toString(), exceltype.toString(), Integer.parseInt(excelammount.toString()), this.convertJavaDateToSqlDate(a.parse(exceldate.toString())));
                        }
                        JOptionPane.showMessageDialog(null, "ADD SUCCESSFULLY","WARNING", 1);
                 }

                 } catch (FileNotFoundException ex) {
                     Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
                 } catch (IOException ex) {
                   Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
               } catch (SQLException ex) {
            Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_importexcelbtnMouseClicked

    private void importexcelbbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_importexcelbbtnMouseClicked
        // TODO add your handling code here:
         try
             {
               File excelfile;
               FileInputStream excelFIS = null;
               BufferedInputStream excelBIS = null;
               XSSFWorkbook excelJTableImport = null;
               
               String path = "C:\\";
               JFileChooser excelfilechooser = new JFileChooser();
               int excelchooser = excelfilechooser.showOpenDialog(null);

               if (excelchooser == JFileChooser.APPROVE_OPTION)
               {
                       excelfile = excelfilechooser.getSelectedFile();
                       excelFIS = new FileInputStream(excelfile);
                       excelBIS = new BufferedInputStream(excelFIS);
                
                       excelJTableImport = new XSSFWorkbook(excelBIS);
                       XSSFSheet excelSheet = excelJTableImport.getSheetAt(0);

                       for(int i = 0; i <= excelSheet.getLastRowNum(); i++)
                       {
                               XSSFRow excelrow = excelSheet.getRow(i);
                               XSSFCell excelidpub = excelrow.getCell(0);
                               XSSFCell exceladdress = excelrow.getCell(1);
                               XSSFCell excelphonenum = excelrow.getCell(2);
                               this.tableModel2.addRow(new Object[] {excelidpub, exceladdress, excelphonenum});
                               this.pubtbl.InsertPubtoSQL(excelidpub.toString(), exceladdress.toString(), excelphonenum.toString());
                            }
                       }
                       
                       JOptionPane.showMessageDialog(null, "ADD SUCCESFULLY", "WARNING", 1);

                 } catch (FileNotFoundException ex) {
                     Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
                 } catch (IOException ex) {
                   Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
               } catch (SQLException ex) {
            Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_importexcelbbtnMouseClicked

    private void importexcelbbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importexcelbbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_importexcelbbtnActionPerformed

    private void importexcelbbtn1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_importexcelbbtn1MouseClicked
        // TODO add your handling code here:
        FileOutputStream excelFOS = null;
        BufferedOutputStream excelBOS = null;
        XSSFWorkbook excelexportfile = null;
        JFileChooser excelfilechooser = new JFileChooser("C:\\");
        excelfilechooser.setDialogTitle("SAVE AS EXCEL");
        FileNameExtensionFilter f = new FileNameExtensionFilter("xlsx", "xlsm");
        excelfilechooser.setFileFilter(f);
        int excelchooser = excelfilechooser.showSaveDialog(null);
        
        if (excelchooser == JFileChooser.APPROVE_OPTION)
        {
            
            try {
                excelexportfile = new XSSFWorkbook();
                XSSFSheet excelsheet = excelexportfile.createSheet("JTable Sheet");
                for (int i = 0; i < this.tableModel2.getRowCount(); i++)
                {
                    XSSFRow excelrow = excelsheet.createRow(i);
                    for(int j = 0; j < this.tableModel2.getColumnCount(); j++)
                    {
                        XSSFCell excelcolumn = excelrow.createCell(j);
                        excelcolumn.setCellValue(this.tableModel2.getValueAt(i, j).toString());
                    }
                }   
                excelFOS = new FileOutputStream(excelfilechooser.getSelectedFile() + ".xlsx");
                excelBOS = new BufferedOutputStream(excelFOS);
                excelexportfile.write(excelBOS);
                JOptionPane.showMessageDialog(null, "SAVE SUCCESSFULLY", "WARNING", 1);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    if (excelBOS != null)
                    {
                        excelBOS.close();
                    }
                    if (excelFOS != null)
                    {
                         excelFOS.close();
                    }
                    if (excelexportfile != null)
                    {
                        excelexportfile.close();
                    }
                    
                } catch (IOException ex) {
                    Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_importexcelbbtn1MouseClicked

    private void importexcelbbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importexcelbbtn1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_importexcelbbtn1ActionPerformed

    private void importexcelbbtn2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_importexcelbbtn2MouseClicked
        // TODO add your handling code here:
         FileOutputStream excelFOS = null;
        BufferedOutputStream excelBOS = null;
        XSSFWorkbook excelexportfile = null;
        JFileChooser excelfilechooser = new JFileChooser("C:\\");
        excelfilechooser.setDialogTitle("SAVE AS EXCEL");
        FileNameExtensionFilter f = new FileNameExtensionFilter("xlsx", "xlsm");
        excelfilechooser.setFileFilter(f);
        int excelchooser = excelfilechooser.showSaveDialog(null);
        
        if (excelchooser == JFileChooser.APPROVE_OPTION)
        {
            
            try {
                excelexportfile = new XSSFWorkbook();
                XSSFSheet excelsheet = excelexportfile.createSheet("JTable Sheet");
                for (int i = 0; i < this.tableModel3.getRowCount(); i++)
                {
                    XSSFRow excelrow = excelsheet.createRow(i);
                    for(int j = 0; j < this.tableModel3.getColumnCount(); j++)
                    {
                        XSSFCell excelcolumn = excelrow.createCell(j);
                        excelcolumn.setCellValue(this.tableModel3.getValueAt(i, j).toString());
                    }
                }   
                excelFOS = new FileOutputStream(excelfilechooser.getSelectedFile() + ".xlsx");
                excelBOS = new BufferedOutputStream(excelFOS);
                excelexportfile.write(excelBOS);
                JOptionPane.showMessageDialog(null, "SAVE SUCCESSFULLY", "WARNING", 1);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    if (excelBOS != null)
                    {
                        excelBOS.close();
                    }
                    if (excelFOS != null)
                    {
                         excelFOS.close();
                    }
                    if (excelexportfile != null)
                    {
                        excelexportfile.close();
                    }
                    
                } catch (IOException ex) {
                    Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_importexcelbbtn2MouseClicked

    private void importexcelbbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importexcelbbtn2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_importexcelbbtn2ActionPerformed

    private void importexcelbbtn3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_importexcelbbtn3MouseClicked
        // TODO add your handling code here:
         FileOutputStream excelFOS = null;
        BufferedOutputStream excelBOS = null;
        XSSFWorkbook excelexportfile = null;
        JFileChooser excelfilechooser = new JFileChooser("C:\\");
        excelfilechooser.setDialogTitle("SAVE AS EXCEL");
        FileNameExtensionFilter f = new FileNameExtensionFilter("xlsx", "xlsm");
        excelfilechooser.setFileFilter(f);
        int excelchooser = excelfilechooser.showSaveDialog(null);
        
        if (excelchooser == JFileChooser.APPROVE_OPTION)
        {
            
            try {
                excelexportfile = new XSSFWorkbook();
                XSSFSheet excelsheet = excelexportfile.createSheet("JTable Sheet");
                for (int i = 0; i < this.tableModel1.getRowCount(); i++)
                {
                    XSSFRow excelrow = excelsheet.createRow(i);
                    for(int j = 0; j < this.tableModel1.getColumnCount(); j++)
                    {
                        XSSFCell excelcolumn = excelrow.createCell(j);
                        excelcolumn.setCellValue(this.tableModel1.getValueAt(i, j).toString());
                    }
                }   
                excelFOS = new FileOutputStream(excelfilechooser.getSelectedFile() + ".xlsx");
                excelBOS = new BufferedOutputStream(excelFOS);
                excelexportfile.write(excelBOS);
                JOptionPane.showMessageDialog(null, "SAVE SUCCESSFULLY", "WARNING", 1);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    if (excelBOS != null)
                    {
                        excelBOS.close();
                    }
                    if (excelFOS != null)
                    {
                         excelFOS.close();
                    }
                    if (excelexportfile != null)
                    {
                        excelexportfile.close();
                    }
                    
                } catch (IOException ex) {
                    Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_importexcelbbtn3MouseClicked

    private void importexcelbbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importexcelbbtn3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_importexcelbbtn3ActionPerformed

    private void printbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printbtnMouseClicked
        try {
            // TODO add your handling code here:

            Boolean printBookInfo = this.BookInfotbl.print();
            if (printBookInfo)
            {
                JOptionPane.showMessageDialog(null, "PRINTED SUCCESSFULLY", "WARNING", 1);
            }
            else
            {
                
            }

        } catch (PrinterException ex) {
            Logger.getLogger(DetailReceiptscrn.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_printbtnMouseClicked

    private void printbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_printbtnActionPerformed

    private void printbtn1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printbtn1MouseClicked
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:

            Boolean printbookInfo = this.Bookinfotable.print();
            if (printbookInfo)
            {
                JOptionPane.showMessageDialog(null, "PRINTED SUCCESSFULLY", "WARNING", 1);
            }
            else
            {
                
            }

        } catch (PrinterException ex) {
            Logger.getLogger(DetailReceiptscrn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printbtn1MouseClicked

    private void printbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printbtn1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_printbtn1ActionPerformed

    private void printbtn2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printbtn2MouseClicked
        // TODO add your handling code here:
         try {
            // TODO add your handling code here:

            Boolean printbookInfo = this.Bookinfotable.print();
            if (printbookInfo)
            {
                JOptionPane.showMessageDialog(null, "PRINTED SUCCESSFULLY", "WARNING", 1);
            }
            else
            {
                
            }

        } catch (PrinterException ex) {
            Logger.getLogger(DetailReceiptscrn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printbtn2MouseClicked

    private void printbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printbtn2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_printbtn2ActionPerformed

    public void GetSumAmmountofBook()
    {
        long sumbookammount = 0;
        for(int i = 0; i < this.tableModel1.getRowCount(); i++)
        {
            sumbookammount += Long.parseLong(this.tableModel1.getValueAt(i, 4).toString());   
        }
        this.jTextField4.setText(String.valueOf(sumbookammount));
    }
    
    
    private void jTextField4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField4MouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextField4MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bookinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bookinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bookinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bookinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Bookinfo().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTable BookInfotbl;
    private javax.swing.JTable Bookinfotable;
    private javax.swing.JTable Pubinfotable;
    private javax.swing.JButton createbtn;
    private javax.swing.JButton createinfotbl;
    private javax.swing.JButton deletebbtn;
    private javax.swing.JButton deletebtn;
    private javax.swing.JButton deletepbtn;
    private javax.swing.JButton importexcelbbtn;
    private javax.swing.JButton importexcelbbtn1;
    private javax.swing.JButton importexcelbbtn2;
    private javax.swing.JButton importexcelbbtn3;
    private javax.swing.JButton importexcelbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    public javax.swing.JTextField jTextField4;
    private javax.swing.JButton printbtn;
    private javax.swing.JButton printbtn1;
    private javax.swing.JButton printbtn2;
    private javax.swing.JButton publisherbtn;
    private javax.swing.JButton returnbtn;
    public javax.swing.JTextField searchbooktxt;
    public javax.swing.JTextField searchpubtxt;
    public javax.swing.JTextField searchtxt;
    private javax.swing.JButton updatebbtn;
    private javax.swing.JButton updatebtn;
    private javax.swing.JButton updatepbtn;
    // End of variables declaration//GEN-END:variables
}
