/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;
import Databases.Connect;
import Interfaces.Bookinfo;
import Interfaces.IDetailReceipt;
import Interfaces.Readerscrn;
import Interfaces.UDetailReceipt;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import Processes.DetailReceipt;
import java.awt.print.PrinterException;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;



/**
 *
 * @author long
 */
public class DetailReceiptscrn extends javax.swing.JFrame {

    /**
     * Creates new form DetailReceiptscrn
     */
    
    private final DefaultTableModel detailrmodel = new DefaultTableModel();
    private final DetailReceipt drtable = new DetailReceipt();
    public IDetailReceipt idrtable = new IDetailReceipt();
    public UDetailReceipt udrtable = new UDetailReceipt();
    public Connect cn = new Connect();
    
    public DetailReceiptscrn() throws SQLException {
        initComponents();
        this.Updatedrbtn.setEnabled(false);
        this.Deletedrbtn.setEnabled(false);
        String []colsbi = {"FULLNAME", "ID", "FOUNDED YEAR", "PRICE", "FOUNDED YEAR OF ID CARD"};
        
        detailrmodel.setColumnIdentifiers(colsbi);
        ReceiptTable.setModel(detailrmodel);
        ShowData();
        this.getcostnumber();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ReceiptTable = new javax.swing.JTable();
        printbtn = new javax.swing.JButton();
        exportexcelbtn = new javax.swing.JButton();
        searchtickettxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        createbtn = new javax.swing.JButton();
        Updatedrbtn = new javax.swing.JButton();
        Deletedrbtn = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        returnbtn = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("RECEIPT");

        ReceiptTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ReceiptTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        ReceiptTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ReceiptTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ReceiptTable);

        printbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        printbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/documents.png"))); // NOI18N
        printbtn.setText("PRINT");
        printbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                printbtnMouseClicked(evt);
            }
        });
        printbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printbtnActionPerformed(evt);
            }
        });

        exportexcelbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        exportexcelbtn.setIcon(new javax.swing.ImageIcon("C:\\homeworks\\Library(VietNamversion)\\LibManager\\src\\Interfaces\\1.png")); // NOI18N
        exportexcelbtn.setText("SAVE AS EXCEL");
        exportexcelbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exportexcelbtnMouseClicked(evt);
            }
        });
        exportexcelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportexcelbtnActionPerformed(evt);
            }
        });

        searchtickettxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchtickettxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchtickettxtKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setText("SEARCH FOR:");

        createbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        createbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/add-documents.png"))); // NOI18N
        createbtn.setText("ADD");
        createbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createbtnMouseClicked(evt);
            }
        });
        createbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createbtnActionPerformed(evt);
            }
        });

        Updatedrbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Updatedrbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/refresh.png"))); // NOI18N
        Updatedrbtn.setText("UPDATE");
        Updatedrbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UpdatedrbtnMouseClicked(evt);
            }
        });
        Updatedrbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdatedrbtnActionPerformed(evt);
            }
        });

        Deletedrbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Deletedrbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/delete.png"))); // NOI18N
        Deletedrbtn.setText("DELETE");
        Deletedrbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeletedrbtnMouseClicked(evt);
            }
        });
        Deletedrbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletedrbtnActionPerformed(evt);
            }
        });

        jTextField1.setText("jTextField1");

        returnbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        returnbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/return.png"))); // NOI18N
        returnbtn.setText("RETURN");
        returnbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                returnbtnMouseClicked(evt);
            }
        });

        jTextField2.setText("jTextField2");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(createbtn)
                        .addGap(29, 29, 29)
                        .addComponent(printbtn)
                        .addGap(40, 40, 40)
                        .addComponent(exportexcelbtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Updatedrbtn)
                        .addGap(47, 47, 47)
                        .addComponent(Deletedrbtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(returnbtn)))
                        .addGap(25, 25, 25)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(346, 346, 346)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(searchtickettxt, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(returnbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(searchtickettxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exportexcelbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(printbtn)
                    .addComponent(createbtn)
                    .addComponent(Updatedrbtn)
                    .addComponent(Deletedrbtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public java.sql.Date convertJavaDateToSqlDate(java.util.Date date) {
        return new java.sql.Date(date.getTime());  
    }
    
    public void getcostnumber() throws SQLException
    {
        this.cn.connectSQL();
        String getpro = "select sum(cost) as statisticalprofit  from DetailReceipt";

        PreparedStatement pst = this.cn.conn.prepareStatement(getpro);
        ResultSet rs = pst.executeQuery();
        if (rs.next())
        {
            String sumpro = rs.getString("statisticalprofit");
            this.jTextField2.setText(sumpro);
        }    
        
        this.ClearData();
        this.ShowData();
    }
    
     public void ShowData(String fullname, String id, String fyear)
    {
        try
        {
            ResultSet res = null;
            res = drtable.SearchReceipt(fullname, id, fyear);
            this.ClearData();
            while(res.next())
            {
                String rows[] = new String[5];
    
                rows[0] = res.getString(1);
                rows[1] = res.getString(2);
                rows[2] = res.getString(3);
                rows[3] = String.valueOf(res.getInt(4));
                rows[4] = String.valueOf(res.getDate(5));
                this.detailrmodel.addRow(rows);
            }
            
        
        }
        catch (SQLException ex)
        {
            Logger.getLogger(Readerscrn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
      public void ShowData() throws SQLException
    {
        ResultSet res = this.drtable.DisplayReceipt();
        try 
        {
            while(res.next())
            {
                String rows[] = new String[5];
    
                rows[0] = res.getString(1);
                rows[1] = res.getString(2);
                rows[2] = res.getString(3);
                rows[3] = String.valueOf(res.getInt(4));
                rows[4] = String.valueOf(res.getDate(5));
                this.detailrmodel.addRow(rows);
            }
        }
        catch (SQLException e)
        {
            
        }
        
    }
      
    
    
    public void ClearData() throws SQLException
    {
        for (int i = this.detailrmodel.getRowCount()-1; i >= 0; i--)
        {
            this.detailrmodel.removeRow(i);
        }
            
    }
     
     
    private void printbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printbtnMouseClicked
        try {
            // TODO add your handling code here:
            
            
            Boolean printdr = this.ReceiptTable.print();
            if (printdr)
            {
                JOptionPane.showMessageDialog(null, "In thành công", "Thông báo", 1);
            }
            else
            {
               
            }
            
            
        } catch (PrinterException ex) {
            Logger.getLogger(DetailReceiptscrn.class.getName()).log(Level.SEVERE, null, ex);
        }

       
    }//GEN-LAST:event_printbtnMouseClicked

    private void printbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_printbtnActionPerformed

    private void exportexcelbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportexcelbtnMouseClicked
        // TODO add your handling code here:
        FileOutputStream excelFOS = null;
        BufferedOutputStream excelBOS = null;
        XSSFWorkbook excelexportfile = null;
        JFileChooser excelfilechooser = new JFileChooser("C:\\");
            excelfilechooser.setDialogTitle("Xuất ra tập tin EXCEL");
            FileNameExtensionFilter f = new FileNameExtensionFilter("xlsx", "xlsm");
            excelfilechooser.setFileFilter(f);
            int excelchooser = excelfilechooser.showSaveDialog(null);

            if (excelchooser == JFileChooser.APPROVE_OPTION)
            {

                try {
                    excelexportfile = new XSSFWorkbook();
                    XSSFSheet excelsheet = excelexportfile.createSheet("JTable Sheet");
                    for (int i = 0; i < this.detailrmodel.getRowCount(); i++)
                    {
                        XSSFRow excelrow = excelsheet.createRow(i);
                        for(int j = 0; j < this.detailrmodel.getColumnCount(); j++)
                        {
                            XSSFCell excelcolumn = excelrow.createCell(j);
                            excelcolumn.setCellValue(this.detailrmodel.getValueAt(i, j).toString());
                        }
                    }
                    excelFOS = new FileOutputStream(excelfilechooser.getSelectedFile() + ".xlsx");
                    excelBOS = new BufferedOutputStream(excelFOS);
                    excelexportfile.write(excelBOS);
                    JOptionPane.showMessageDialog(null, "Lưu thành Excel thành công", "Thông báo", 1);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    try {
                        if (excelBOS != null)
                        {
                            excelBOS.close();
                        }
                        if (excelFOS != null)
                        {
                            excelFOS.close();
                        }
                        if (excelexportfile != null)
                        {
                            excelexportfile.close();
                        }

                    } catch (IOException ex) {
                        Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
    }//GEN-LAST:event_exportexcelbtnMouseClicked

    private void exportexcelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportexcelbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exportexcelbtnActionPerformed

    private void searchtickettxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchtickettxtKeyReleased
        try {
            // TODO add your handling code here:
            this.ClearData();
            this.ShowData(this.searchtickettxt.getText(), this.searchtickettxt.getText(), this.searchtickettxt.getText());
        } catch (SQLException ex) {
            Logger.getLogger(Bookinfo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchtickettxtKeyReleased

    private void createbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createbtnMouseClicked
        // TODO add your handling code here:
        this.idrtable.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_createbtnMouseClicked

    private void createbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createbtnActionPerformed

    private void UpdatedrbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UpdatedrbtnMouseClicked
        // TODO add your handling code here:
        this.udrtable.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_UpdatedrbtnMouseClicked

    private void UpdatedrbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatedrbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UpdatedrbtnActionPerformed

    private void DeletedrbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeletedrbtnMouseClicked
        // TODO add your handling code here:
        try
        {
            if(this.jTextField1.getText().length() == 0)
            {
                JOptionPane.showMessageDialog(null, "Bạn không thể xóa nếu bạn không lựa chọn một dòng trong bảng", "Thông báo", 1);
                return;
            }
            else
            {
                int ynoption = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa?", "Thông báo", JOptionPane.YES_NO_OPTION);
                if (ynoption == JOptionPane.YES_OPTION)
                {
                      JOptionPane.showMessageDialog(null, "Xóa thành công", "Thông báo", 1);
                    this.drtable.DeleteReceipt(this.jTextField1.getText());
                    this.ClearData();
                    this.ShowData();       
                }
                else
                {
                    return;
                }

            }
        }
        catch (SQLException ex)
        {

        }
    }//GEN-LAST:event_DeletedrbtnMouseClicked

    private void DeletedrbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletedrbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeletedrbtnActionPerformed

    private void ReceiptTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReceiptTableMouseClicked
        // TODO add your handling code here:
              try
        {
            this.Updatedrbtn.setEnabled(true);
            this.Deletedrbtn.setEnabled(true);

            int row = this.ReceiptTable.getSelectedRow();
            
            ResultSet r = this.drtable.DisplayReceipt((this.ReceiptTable.getModel().getValueAt(row, 0)).toString());
            if (r.next())
            {
                this.jTextField1.setText(r.getString("ididencard"));
                this.udrtable.jComboBox1.setSelectedItem(r.getString("Fullname"));   
                this.udrtable.jComboBox2.setSelectedItem(r.getString("ididencard"));
                this.udrtable.fbcyeartxt.setText(r.getString("FoundedLoanSlipDate"));
                this.udrtable.costtxt.setText(String.valueOf(r.getInt("Cost")));
                this.udrtable.jDateChooser1.setDate(r.getDate("FoundedIdencardDate"));
                
            }
        } 
        catch (SQLException ex) {
            
        }
    }//GEN-LAST:event_ReceiptTableMouseClicked

    private void returnbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnbtnMouseClicked
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            Readerscrn l = new Readerscrn();
            l.setVisible(true);
            this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Identitycard.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_returnbtnMouseClicked

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DetailReceipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DetailReceipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DetailReceipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DetailReceipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new DetailReceiptscrn().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(DetailReceiptscrn.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Deletedrbtn;
    private javax.swing.JTable ReceiptTable;
    private javax.swing.JButton Updatedrbtn;
    public javax.swing.JButton createbtn;
    private javax.swing.JButton exportexcelbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton printbtn;
    private javax.swing.JButton returnbtn;
    public javax.swing.JTextField searchtickettxt;
    // End of variables declaration//GEN-END:variables

    
}
